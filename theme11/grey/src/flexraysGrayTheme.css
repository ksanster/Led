/* CSS file */
@font-face
{
  font-family: flexraysChosenFont;
  /* src: local("Georgia");  */
  src: url('assets/font/georgia.ttf'); 
  font-weight: normal;
  unicode-range:
                U+0020-U+0040, /* Punctuation, Numbers */
                U+0041-U+005A, /* Upper-Case A-Z */
                U+005B-U+0060, /* Punctuation and Symbols */
                U+0061-U+007A, /* Lower-Case a-z */
                U+007B-U+007E; /* Punctuation and Symbols */
}

@font-face
{
  font-family: flexraysChosenFont;
  src: url('assets/font/georgiab.ttf');
  font-weight: bold;
  unicode-range:
                U+0020-U+0040, /* Punctuation, Numbers */
                U+0041-U+005A, /* Upper-Case A-Z */
                U+005B-U+0060, /* Punctuation and Symbols */
                U+0061-U+007A, /* Lower-Case a-z */
                U+007B-U+007E; /* Punctuation and Symbols */
}

@font-face
{
  font-family: flexraysChosenFont;
  src: url('assets/font/georgiai.ttf');
  font-weight:normal;
  font-style:italic;
  unicode-range:
                U+0020-U+0040, /* Punctuation, Numbers */
                U+0041-U+005A, /* Upper-Case A-Z */
                U+005B-U+0060, /* Punctuation and Symbols */
                U+0061-U+007A, /* Lower-Case a-z */
                U+007B-U+007E; /* Punctuation and Symbols */
}

@font-face
{
  font-family: flexraysChosenFont;
  src: url('assets/font/georgiaz.ttf');
  font-weight:bold;
  font-style:italic;
  unicode-range:
                U+0020-U+0040, /* Punctuation, Numbers */
                U+0041-U+005A, /* Upper-Case A-Z */
                U+005B-U+0060, /* Punctuation and Symbols */
                U+0061-U+007A, /* Lower-Case a-z */
                U+007B-U+007E; /* Punctuation and Symbols */
}

Accordion
{
	backgroundColor: #EDEDED;
	paddingBottom: 5;
	paddingLeft: -1;
	paddingRight: 5;
	paddingTop: 5;
	border-style: solid;
	border-thickness: 5;
}

AccordionHeader 
{
    themeColor: #474747;
    textAlign: "left";
    fillColors: #474747, #474747;
	fillAlphas: 0.7, 0.2;
    textRollOverColor: #474747;
    textSelectedColor: #474747;
    color: #333333;
}


Alert
{
	color: #000000;
	header-height: 30;
	background-color: #333333;
	border-skin:ClassReference('assets.skins.MyPanelSkin');
	shadow-direction: center;
	corner-radius: 0;	
}

Application
{
	background-color: #FFFFFF;	
	theme-color: #474747;
}

ApplicationControlBar
{
	borderStyle: "applicationControlBar";
	cornerRadius: 0;
	docked: true;
	dropShadowEnabled: true;
	shadow-direction: right;
	fillAlphas: 0.5, 0;
	fillColors: #333333, #FFFFFF;
	paddingBottom: 4;
	paddingLeft: 8;
	paddingRight: 8;
	paddingTop: 5;
	shadowDistance: 5;
}

Button
{
	theme-color: #474747;
	up-skin: ClassReference('assets.skins.flexraysButtonSkin');
	over-skin: ClassReference('assets.skins.flexraysButtonSkin');
	down-skin: ClassReference('assets.skins.flexraysButtonSkin');
	disabled-skin: ClassReference('assets.skins.flexraysButtonSkin');
}

ButtonBar
{
	horizontalAlign: "center";
	horizontalGap: 0;
	textAlign: "center";
	verticalAlign: "middle";
	verticalGap: 0;
	button-style-name: myButtonStyle;
	first-button-style-name: myButtonStyle;
	last-button-style-name: myButtonStyle;
}

.myButtonStyle
{
	theme-color: #474747;
	up-skin: ClassReference('assets.skins.flexraysButtonSkin');
	over-skin: ClassReference('assets.skins.flexraysButtonSkin');
	down-skin: ClassReference('assets.skins.flexraysButtonSkin');
	disabled-skin: ClassReference('assets.skins.flexraysButtonSkin');
}

CheckBox
{
	 /* Unselected icons */
	 upIcon: Embed(skinClass='CheckBoxNoIcon');
     overIcon: Embed(skinClass='CheckBoxNoIcon');
     downIcon: Embed(skinClass='CheckBoxNoIcon');
     
     /* Selected icons */
     selectedUpIcon: Embed(skinClass='CheckBoxYesIcon');
     selectedOverIcon: Embed(skinClass='CheckBoxYesIcon');
     selectedDownIcon: Embed(skinClass='CheckBoxYesIcon');
}

ColorPicker
{
	up-skin: ClassReference(null);
    over-skin: ClassReference(null);
    down-skin: ClassReference(null);
    disabled-skin: ClassReference(null);
}

 ComboBox
{
	arrowButtonWidth: 18;
	cornerRadius: 0;
	disabledSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	downSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	dropDownStyleName: "comboDropDown";
	editableDisabledSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	editableDownSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	editableOverSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	editableUpSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	fontWeight: "bold";
	leading: 0;
	overSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
	paddingLeft: 5;
	upSkin: ClassReference("mx.skins.halo.ComboBoxArrowSkin");
} 


 .comboDropDown
{
	backgroundColor: #333333;
	borderThickness: 0;
	cornerRadius: 0;
	dropShadowEnabled: true;
	fontWeight: "normal";
	shadowDirection: "center";
	shadowDistance: 1;
} 

Container
{
	borderStyle: "none";
}

ControlBar
{
	disabledOverlayAlpha: 0; 
	borderStyle: "controlBar";
	paddingBottom: 10;
	paddingLeft: 10;
	paddingRight: 10;
	paddingTop: 10;
	verticalAlign: "middle";
}

CursorManager
{
	busyCursor: ClassReference("mx.skins.halo.BusyCursor");
	busyCursorBackground: Embed(source="Assets.swf",symbol="mx.skins.cursor.BusyCursor");
}

DataGrid
{
	 headerStyleName: "dataGridStyles";
	 alternatingItemColors: #F7F7F7, #CCCCCC; 
	 padding-bottom: 0;
	 padding-left: 0;
	 padding-right: 0;
	 padding-top: 0;
}

DataGridItemRenderer
{
	paddingLeft: 5;
}

.dataGridStyles
{
	fontWeight: "bold";
}

DateChooser
{
	selection-indicator-skin: ClassReference('assets.skins.DateCooserSelectionSkin');
	todayIndicatorSkin: ClassReference('assets.skins.DateChooserTodayIndicatorSkin');
}

DateField 
{
    skin: Embed(skinClass='Clalendar_flexrays');
    dateChooserStyleName: "dateFieldPopup";
    up-skin: ClassReference(null);
    over-skin: ClassReference(null);
    down-skin: ClassReference(null);
    disabled-skin: ClassReference(null);
    headerStyleName: "headerDateText";
    todayStyleName: "todayStyle";
}

.dateFieldPopup
{
	backgroundColor: #333333;
	color: #CCCCCC;
	borderThickness: 0;
	dropShadowEnabled: true;
}

.headerDateText
{
	color: #000000;	
}

.todayStyle
{
	background-alpha: 0.4;
	padding-top: 0;
	color: #FFFFFF;
	font-weight:bold;
	font-size: 16;
	text-align:center
}

.errorTip
{
	borderColor: #474747;
}

HorizontalList
{
	textAlign: "center";
}

HRule
{
	stroke-width: 3;
	stroke-color: #666666;
	shadow-color: #333333;
}

HSlider
{
	track-skin: Embed(skinClass='Slider_trackSkin');		
}

LinkButton
{
	corner-radius: 0;
	link-button-style-name: flexraysLinkButtonSkinName;
	separator-width: 2;
	separator-color: #474747;
}

List
{
	track-skin: ClassReference(null);
	border-skin: Embed(skinClass='List_borderSkin');
	drop-shadow-enabled: true; 	
}

.flexraysLinkButtonSkinName
{
	corner-radius: 0;	
	up-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	over-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	down-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	disabled-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	selected-up-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	selected-over-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	selected-down-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');
	selected-disabled-skin: ClassReference('assets.skins.FlexraysLinkButtonSkin');	
}

LinkBar
{
	horizontalGap: 8;
	paddingBottom: 2;
	paddingLeft: 2;
	paddingRight: 2;
	paddingTop: 2;
	separatorColor: #C4CCCC;
	separatorSkin: ClassReference("mx.skins.halo.LinkSeparator");
	separatorWidth: 1;
	verticalGap: 8;
}

ListBase
{
	backgroundColor: #FFFFFF;
	backgroundDisabledColor: #DDDDDD;
	borderStyle: "solid";
	dropIndicatorSkin: ClassReference("mx.skins.halo.ListDropIndicator");
	paddingBottom: 2;
	paddingLeft: 2;
	paddingRight: 0;
	paddingTop: 2;
}

NumericStepper
{
	cornerRadius: 8;
	focusRoundedCorners: "tr br";  	
}
	
Panel
{
	header-height: 50;
	title-style-name: flexraysPanelTitle;
	border-skin: ClassReference('assets.skins.MyPanelSkin');
	corner-radius: 30;
	background-color: #333333;
	title-background-skin: Embed(skinClass='title_backgroundSkin');
	shadow-direction: center;
}

.flexraysPanelTitle
{
	color: #FFFFFF;
	font-family: flexraysChosenFont;
	font-size: 14;
}

PopUpButton
{
	corner-radius: 0;
	arrowButtonWidth: 18;
	backgroundColor: #333333;
	disabledSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	downSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	paddingLeft: 3;
	paddingRight: 3;
	overSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	popUpDownSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	popUpIcon: ClassReference("mx.skins.halo.PopUpIcon");
	popUpGap: 0;
	popUpOverSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	upSkin: ClassReference("mx.skins.halo.PopUpButtonSkin"); 
}

PopUpMenuButton
{
	corner-radius: 0;
	arrowButtonWidth: 18;
	backgroundColor: #333333;
	disabledSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	downSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	fontWeight: "bold";
	paddingLeft: 3;
	paddingRight: 3;
	overSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	popUpDownSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	popUpIcon: ClassReference("mx.skins.halo.PopUpMenuIcon");
	popUpGap: 0;
	popUpOverSkin: ClassReference("mx.skins.halo.PopUpButtonSkin");
	upSkin: ClassReference("mx.skins.halo.PopUpButtonSkin"); 
}

ProgressBar
{
	bar-skin: Embed(skinClass='ProgressBar_barSkin');		
	track-skin: Embed(skinClass='ProgressBar_trackSkin');		
	indeterminate-skin: Embed(skinClass='ProgressBar_indeterminateSkin');
}

RadioButton
{
	upIcon: Embed(skinClass='RadioButtonUnselectedIcon');
	overIcon: Embed(skinClass='RadioButtonUnselectedIcon');
    downIcon: Embed(skinClass='RadioButtonUnselectedIcon');
	
	selectedUpIcon: Embed(skinClass='RadioButtonSelectedIcon');
	selectedOverIcon: Embed(skinClass='RadioButtonSelectedIcon');
	selectedDownIcon: Embed(skinClass='RadioButtonSelectedIcon');
}

TabNavigator 
{
    theme-color: #474747;
    cornerRadius: 0;
    tabStyleName: "FlexrayTabs";
    firstTabStyleName: "FlexrayFirstTab";
    lastTabStyleName: "FlexrayLastTab";
    selectedTabTextStyleName: "FlexraySelectedTab";
    horizontal-gap: 2;
}

.FlexrayTabs 
{
    backgroundColor: #474747;
    cornerRadius: 5;
}

.FlexrayFirstTab,
.FlexrayLastTab 
{

    backgroundColor: #474747;
    cornerRadius: 5;
}

.FlexraySelectedTab 
{
    color: #E0E0E0;
    textRollOverColor: #E0E0E0;
}

TabBar
{
	theme-color: #474747;
    cornerRadius: 0;
    tabStyleName: "FlexrayTabs";
    firstTabStyleName: "FlexrayFirstTab";
    lastTabStyleName: "FlexrayLastTab";
    selectedTabTextStyleName: "FlexraySelectedTab";
    horizontal-gap: 2;
}

Tree
{
	folderClosedIcon: ClassReference(null);
    folderOpenIcon: ClassReference(null);
    border-skin: Embed(skinClass='Tree_borderSkin'); 
}

TitleWindow
{
   close-button-up-skin: Embed(skinClass='twCloseButtonUp'); 
   close-button-over-skin: Embed(skinClass='twCloseButtonOver');
   close-button-down-skin: Embed(skinClass='twCloseButtonDown');
}

TextArea
{
	focus-skin: Embed(skinClass='TextArea_focusSkin');  	
	border-skin: Embed(skinClass='TextArea_focusSkin'); 
	shadow-distance: 10;
}

TextInput
{
	focus-skin: Embed(skinClass='TextArea_focusSkin');  	
	shadow-distance: 10;
}

VRule
{
	stroke-width: 3;
	stroke-color: #666666;
	shadow-color: #333333;
}

VSlider
{
	track-skin: Embed(skinClass='Slider_trackSkin');
}

VScrollBar {
   trackColors: #939393, #939393;
   highlightAlphas: 0, 0;
   fillAlphas: 1, 1, 1, 1;
   up-arrow-up-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   up-arrow-over-skin: ClassReference('assets.skins.ScrollArrowSkin');
   up-arrow-down-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   down-arrow-up-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   down-arrow-over-skin: ClassReference('assets.skins.ScrollArrowSkin');
   down-arrow-down-skin: ClassReference('assets.skins.ScrollArrowSkin');   
   thumb-up-skin: ClassReference("assets.skins.ScrollThumbSkin");
   thumb-over-skin: ClassReference("assets.skins.ScrollThumbSkin");
   thumb-down-skin: ClassReference("assets.skins.ScrollThumbSkin"); 
   track-skin: ClassReference("assets.skins.ScrollTrackSkin");
}

HScrollBar {
   trackColors: #939393, #939393;
   highlightAlphas: 0, 0;
   fillAlphas: 1, 1, 1, 1;
   up-arrow-up-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   up-arrow-over-skin: ClassReference('assets.skins.ScrollArrowSkin');
   up-arrow-down-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   down-arrow-up-skin: ClassReference('assets.skins.ScrollArrowSkin'); 
   down-arrow-over-skin: ClassReference('assets.skins.ScrollArrowSkin');
   down-arrow-down-skin: ClassReference('assets.skins.ScrollArrowSkin');   
   thumb-up-skin: ClassReference("assets.skins.ScrollThumbSkin");
   thumb-over-skin: ClassReference("assets.skins.ScrollThumbSkin");
   thumb-down-skin: ClassReference("assets.skins.ScrollThumbSkin");
   track-skin: ClassReference("assets.skins.ScrollTrackSkin");
}
