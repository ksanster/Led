<?xml version="1.0" encoding="utf-8"?>
<mx:MenuBar xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:mx="library://ns.adobe.com/flex/mx"
			labelField="@label"
			dataProvider="{applicationMenu}"
			itemClick="onClickItem(event)"
			menuShow="onShowMenu(event)"
			menuHide="onHideMenu(event)"
			>
	<fx:Declarations>
		<fx:XMLList id="applicationMenu">
			<menuitem label="File">
				<menuitem label="New" data="{NEW_PROJECT}" />
				<menuitem label="Load" data="{LOAD_PROJECT}"/>
				<menuitem label="Save" data="{SAVE_PROJECT}" enabled="{!model.files.saved}"/>
				<menuitem label="Save as" data="{SAVE_PROJECT_AS}" enabled="{model.layers.layerList.length > 0}"/>
				<menuitem type="separator"/>
				<menuitem label="Quit" data="{QUIT}" enabled="{model.files.saved}"/>
			</menuitem>
			<menuitem label="View">
				<menuitem label="Center camera"  data="{MOVE_CAMERA_TO_CENTER}"/>
			</menuitem>
			<menuitem type="separator"/>
			<menuitem label="Help">
				<menuitem label="About" data="About" />
			</menuitem >
		</fx:XMLList>
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import com.tengu.tools.leditor.logic.api.IEditorController;
			import com.tengu.tools.leditor.model.LedModel;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.MenuEvent;

			private static const NEW_PROJECT:String 	= "new";
			private static const LOAD_PROJECT:String 	= "load";
			private static const SAVE_PROJECT:String 	= "save";
			private static const SAVE_PROJECT_AS:String = "save_as";
			private static const QUIT:String 			= "quit";
			
			private static const MOVE_CAMERA_TO_CENTER:String 	= "move-to-center";

			[Inject]
			public var controller:IEditorController;
			
			[Inject]
			[Bindable]
			public var model:LedModel;

			[Inject]
			public var mainApp:Led;
			
			public function showClosingAlert():void
			{
				Alert.show("Сохранить изменения?", "", Alert.YES | Alert.NO, null, onSaveRequest);
			}
			
			private function onClickItem(event:MenuEvent):void
			{
				var menuItem:String = event.item.@data; 
				
				switch (menuItem) 
				{
					case NEW_PROJECT:
						if (!model.files.saved)
						{
							Alert.show("Сохранить изменения?", "", Alert.YES | Alert.NO, null, onSaveRequest1);
						}
						else
						{
							controller.clearAll();
						}				
						break;
					case LOAD_PROJECT:
						if (!model.files.saved)
						{
							Alert.show("Сохранить изменения?", "", Alert.YES | Alert.NO, null, onSaveRequest2);
						}
						else
						{
							controller.loadProject();
						}				
						break;
					case SAVE_PROJECT:
						controller.saveProject();
						break;
					case SAVE_PROJECT_AS:
						controller.saveProject(true);
						break;
					case QUIT:
						if (!model.files.saved)
						{
							showClosingAlert();
						}
						else
						{
							mainApp.close();
						}
						break;
					case MOVE_CAMERA_TO_CENTER:
						controller.moveCameraToCenter();
						break;

				}
			}
			
			private function onSaveRequest(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					controller.saveProject();
				}
				model.files.saved = true;
				mainApp.close();
			}

			private function onSaveRequest1(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					controller.saveProject();
				}
				controller.clearAll();
			}

			private function onSaveRequest2(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					controller.saveProject();
				}
				controller.loadProject();
			}
			
			protected function onShowMenu(event:MenuEvent):void
			{
				model.screenSettings.locked = true;
			}
			
			protected function onHideMenu(event:MenuEvent):void
			{
				model.screenSettings.locked = false;
			}
			
		]]>
	</fx:Script>
</mx:MenuBar>
